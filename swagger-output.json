{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "description": "Calendar API",
    "version": "1.0.0"
  },
  "host": "event-planner-nkma.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "GETS all the users",
        "description": "All users are displayed.",
        "responses": {
          "200": {
            "description": "SUCCESS, GET retrieved all users"
          },
          "404": {
            "description": "The attempted GET of all users was Not Found"
          },
          "500": {
            "description": "There was an INTERNAL SERVER ERROR while trying to GET all users"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "GETS a user by their _id",
        "description": "The selected user is displayed.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS, GET Retrieved the selected user"
          },
          "404": {
            "description": "The attempted GET of the selected user was Not Found"
          },
          "412": {
            "description": "The PRECONDITION FAILED in the validation of the _id PARAMETER"
          },
          "500": {
            "description": "There was an INTERNAL SERVER ERROR while trying to GET the selected user"
          }
        }
      },
      "put": {
        "summary": "UPDATES a user that has been selected by _id with any new data entered",
        "description": "The changed data for the user updates the database",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier for the user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fields to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Name"
                },
                "email": {
                  "type": "string",
                  "example": "Updated@email"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": "email"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "SUCCESS (with no content returned), PUT   the selected user in the database"
          },
          "400": {
            "description": "BAD REQUEST your PUT was attempted with forbidden entries"
          },
          "404": {
            "description": "The attempted PUT of the specified user for updating was Not Found"
          },
          "412": {
            "description": "The PRECONDITION FAILED in the validation of the user data"
          },
          "500": {
            "description": "There was an INTERNAL SERVER ERROR while trying to PUT the data change"
          }
        }
      },
      "delete": {
        "summary": "DELETES a user by its _id",
        "description": "With deletion it",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS, the user was DELETED"
          },
          "404": {
            "description": "The selected user for DELETION was NOT FOUND"
          },
          "412": {
            "description": "The PRECONDITION FAILED in the validation of the _id PARAMETER"
          },
          "500": {
            "description": "There was an INTERNAL SERVER ERROR while trying to DELETE the user"
          }
        }
      }
    },
    "/user": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/events/{eventId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/events/{dateRange}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "dateRange",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/goals": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/goals/createWithArray": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/goals/{goalId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/goals/user/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/classes": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/classes/createWithArray": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/classes/{classId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/classes/user/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/celebrations": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/celebrations/createWithArray": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/celebrations/{celebrationId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "celebrationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "celebrationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "celebrationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/celebrations/user/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}